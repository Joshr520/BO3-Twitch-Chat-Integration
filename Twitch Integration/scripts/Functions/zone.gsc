zone_enabled_watcher()
{
    foreach(zone in GetArrayKeys(level.zones))
    {
        thread zone_enabled_wait(zone);
    }
}

zone_enabled_wait(zone)
{
    if(!level.zones[zone].is_enabled)
	{
		level waittill(zone);
	}
    add_enabled_points(zone);
}

add_enabled_points(zone)
{
    foreach(origin in level.global_tp_array)
    {
        if(zone == zm_zonemgr::get_zone_from_position(origin, 0)) level.enabled_tp_array[level.enabled_tp_array.size] = origin;
    }
}

add_random_tp_locations()
{
    switch(level.script)
    {
        case "zm_zod":
            level.global_tp_array = array((1320, -5350, 130), (2200, -5350, 130), (2080, -4530, 130), (1220, -3950, 260), (1200, -2880, 90), (1550, -2680, 260), (2190, -2090, 260), (1530, -1280, 520), (1380, -1830, 650), (500, -1780, 520), (760, -2940, 460), (1680, -3500, 390), (2860, -6050, 150), (2350, -7050, 100), (2570, -6850, 260), (2300, -8190, 390), (1150, -8290, 390), (1330, -9200, 520), (1780, -8520, 130), (1900, -7320, 0), (2900, -9100, -110), (2430, -10050, -250), (2470, -8980, -150), (2630, -4990, -260), (2620, -4100, -390), (2620, -2650, -330), (3500, -5090, 130), (4280, -4300, 130), (4380, -4080, 390), (4660, -3000, 520), (5610, -2130, 390), (6040, -3370, 520), (5390, -3190, 250), (6320, -3970, 260), (7240, -4890, 140));
			break;
		case "zm_factory":
			level.global_tp_array = array((-60, 90, 100), (50, -630, 30), (-560, -160, 80), (-780, -860, 70), (-420, -1220, 200), (-1370, -1110, 200), (300, -1390, 60), (-50, -2080, 160), (-110, -2300, 60), (150, -2420, 280), (60, -800, 60), (340, 30, 70), (750, -500, 70), (1260, 960, 180), (1400, -1430, 140), (290, -1260, 220));
			break;
		case "zm_castle":
			level.global_tp_array = array((480, 210, -40), (350, 900, 160), (-1240, 260, 370), (-660, 1290, 510), (-1360, 2240, 630), (-640, 1250, 820), (-1550, 2390, 830), (-1310, 3910, 830), (-200, 3940, 800), (420, 2540, 920), (1080, 3380, 680), (1780, 3200, 530), (1130, 2200, 450), (1400, 1520, 470), (1640, 590, 70), (490, 2560, 100), (-280, 3570, 160), (-1530, 2250, 210), (-2100, 3140, 420), (5710, -2850, -2290));
			break;
		case "zm_island":
			level.global_tp_array = array((910, -3500, -580), (0, -2150, -380), (-1250, -1240, -250), (-2600, -1720, -100), (-1240, -1680, -230), (-1050, -50, 130), (-1800, 1310, 120), (-3020, 800, -20), (-4650, 1210, -380), (-1460, 530, -120), (-1920, 740, 280), (-380, 380, -170), (290, 1740, -380), (2040, 820, -360), (3210, 400, -670), (1900, 20, -700), (1190, -1640, -470), (2560, -2160, -730), (2960, 2030, -680), (250, 2860, -380), (1360, 2620, -250), (-1490, 2840, -340), (-70, 3410, -540), (-80, 3620, -380), (1010, 3600, -500), (2020, 4380, -380), (260, 4740, -510), (240, 5550, -630), (-480, 7070, -740));
			break;
		case "zm_stalingrad":
			level.global_tp_array = array((-180, -50, 10), (-180, 1410, 20), (-60, 1060, 180), (-190, 1700, 340), (460, 3120, 30), (1790, 3020, -170), (2490, 2690, -150), (1840, 3490, 10), (230, 3090, 330), (-750, 2790, 330), (-1090, 2700, -40), (-230, 3460, -190), (-120, 2190, 10), (-1640, 2160, 150), (-2970, 2870, 570), (-1140, 3060, 170), (10, 4000, 10), (-10, 5560, 310), (-3070, 21180, 170), (-2920, 22060, -150));
			break;
		case "zm_genesis":
            level.global_tp_array = array((-4110, 620, -480), (-3990, -700, -510), (-2020, -4160, -1690), (-1950, -5760, -1430), (-2480, -6820, -1630), (-1040, -5970, -1320), (-1730, -7210, -1540), (650, -5880, -1230), (-480, -7470, -1310), (-230, -9010, -1470), (-470, -8210, -1650), (-1650, -9490, -1610), (6090, -2360, 190), (5190, -1820, 350), (5960, -1440, 350), (4770, -760, 350), (1340, 4040, 1230), (750, 3720, 1340), (1640, 4200, 1510), (850, 4750, 1810), (-30, 4450, 1490), (-1970, 4360, 1260), (20, -420, -370), (50, 800, -230), (-400, 510, -3410), (300, 210, -3210));
			break;
		case "zm_prototype":
            level.global_tp_array = array((10, -630, 10), (160, 500, 10), (690, 760, 10), (590, 840, 150), (-150, -30, 150));
			break;
		case "zm_asylum":
            level.global_tp_array = array((1410, -180, 70), (930, -350, 230), (-230, -340, 230), (-570, -880, 230), (-740, -90, 70), (-920, 240, 230), (-390, 910, 230), (790, 390, 230), (940, 730, 70), (1270, 630, 70), (750, -160, 70));
			break;
		case "zm_sumpf":
            level.global_tp_array = array((10240, 640, -520), (10370, 1430, -520), (10610, 1290, -660), (10670, 270, -660), (9570, 300, -660), (9950, 710, -660), (9660, 1250, -680), (8690, 1820, -670), (8270, 3700, -650), (9290, 2490, -730), (11320, 1840, -690), (10650, 2780, -730), (11670, 3140, -650), (10830, -170, -690), (11560, -1270, -730), (12750, -1340, -640), (9270, -720, -700), (8040, -100, -700), (7320, -1320, -670));
			break;
		case "zm_theater":
            level.global_tp_array = array((-370, -620, 250), (440, -1470, 90), (540, -350, 330), (1570, -820, 330), (990, 20, 170), (1470, 800, 0), (820, 1560, -10), (0, 1730, -10), (610, 750, -50), (-700, -640, 80), (-1390, 140, 10), (-1640, 1570, 170), (-1020, 1550, 90));
			break;
		case "zm_cosmodrome":
            level.global_tp_array = array((-460, 130, -480), (-260, 720, -300), (-650, 1220, -110), (-510, 1030, 230), (-260, 1470, 40), (510, 1230, 230), (1550, 1270, 360), (770, 1390, -170), (630, 390, -310), (-1050, 2060, -170), (-1970, 2300, -80), (-1020, 810, -90), (-190, -120, -130), (490, -1390, -50));
			break;
		case "zm_temple":
            level.global_tp_array = array((-10, -740, 30), (-1560, -1000, -70), (-1150, -1550, -80), (-2000, -2160, -390), (-1890, -1390, -480), (-600, -1070, -410), (10, 130, -330) ,(880, -780, -400), (1470, -1090, -360), (1410, -1540, -170), (1420, -980, 20), (170, -1490, -400));
			break;
		case "zm_moon":
            level.global_tp_array = array((-190, 310, 0), (-180, 180, -200), (-980, 1120, -250), (-1500, 2480, -420), (90, 2020, -680), (800, 2960, -410), (900, 1880, -360), (1240, 1000, -230), (1310, 610, -180), (-190, 3730, -570), (1470, 4080, -330), (1770, 5470, 20), (1690, 4040, -50), (30, 3940, -160), (38, 5280, 60), (-1340, 6970, 10), (-470, 8270, 10));
			break;
		case "zm_tomb":
            level.global_tp_array = array((2520, 4660, -300), (1070, 4190, -340), (10, 4080, -210), (570, 4280, -170), (-1060, 4580, -250), (-860, 3480, -290), (-780, 2950, -110), (680, 2450, -120), (2120, 3600, -320), (3110, 4390, -600), (-750, 910, 140), (-2010, -390, 190), (-3270, -400, -180), (60, -930, 100), (-120, 90, 330), (-260, 60, 50), (10, -380, -490), (790, 700, 80), (1340, 2870, -90), (3340, 1200, -340), (2850, 150, 160), (1250, -690, 110), (1360, -1810, 220), (-800, -1940, 210), (540, -2680, 370), (1020, -3880, 310), (1430, -1740, -120));
			break;
    }
    level.enabled_tp_array = [];
    zone_enabled_watcher();
}

zone_monitor_origin()
{
	origin = init_hud(15, 180);
	for(;;)
	{		
		org = self.origin;
		str = "( " + org[0] + " , " + org[1] + " , " + org[2] + " )";
		origin SetText(str);
		wait 1;
	}
}

zone_monitor_name()
{
	origin = init_hud(15, 195);
    while (1)
    {
        zone = zm_zonemgr::get_zone_from_position(self.origin + VectorScale((0, 0, 1), 32), 1);
        origin SetText("Zone: " + zone);
        wait 1;
    }
}